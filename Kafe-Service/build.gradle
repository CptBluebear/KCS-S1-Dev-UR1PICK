plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'one.kafe'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // elasticsearch
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch'
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.10.2'
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: '7.10.2'
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.10.2'

    // ConfigurationProperties 어노테이션을 통해 application.yml 파일에 있는 값을 매칭시키기 위해 사용
    //annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // JSON
    implementation group: 'jakarta.json', name: 'jakarta.json-api', version: '2.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'

    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    implementation 'org.json:json:20200518'

    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    implementation 'org.springframework.boot:spring-boot-starter-quartz'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
